<?xml version="1.0" encoding="Shift_JIS" ?>
<!-- なんちゃってXML version 0.1( ObjectEditor専用 ) -->
<xobject>
<ID>project</ID>
<x0>0</x0>
<y0>0</y0>
<width>200</width>
<height>100</height>
<ID_maker>81</ID_maker>
<objectname>card8vm_sym</objectname>
<description>新規のアプリケーション</description>
<codeclip>
<ID>_CSTART</ID>
<x0>834</x0>
<y0>8</y0>
<width>80</width>
<height>24</height>
<codetext> String[] ARGS;
</codetext>
</codeclip>
<pin>
<ID>_PSTART</ID>
<x0>39</x0>
<y0>14</y0>
<width>55</width>
<height>24</height>
<text>Start()</text>
<px>50</px>
<py>50</py>
</pin>
<relation>
<ID>_R3</ID>
<pin1name>_PSTART</pin1name>
<pin2name>_A0(_Pstart)</pin2name>
</relation>
<xobject>
<ID>_X6</ID>
<x0>10</x0>
<y0>233</y0>
<width>106</width>
<height>175</height>
<ID_maker>34</ID_maker>
<objectname>symulator</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>2</x0>
<y0>461</y0>
<width>73</width>
<height>27</height>
<text>run_stop()</text>
<px>0</px>
<py>37</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>211</x0>
<y0>284</y0>
<width>85</width>
<height>28</height>
<text>single_step()</text>
<px>0</px>
<py>103</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>35</x0>
<y0>24</y0>
<width>60</width>
<height>30</height>
<text>add()</text>
<px>0</px>
<py>62</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>33</x0>
<y0>79</y0>
<width>60</width>
<height>30</height>
<text>remove()</text>
<px>0</px>
<py>84</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>12</x0>
<y0>140</y0>
<width>98</width>
<height>29</height>
<text>disp( String s)</text>
<px>0</px>
<py>145</py>
</pin>
<operation>
<ID>_O8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>27</x0>
<y0>392</y0>
<width>164</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>38</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>115</outpinx0>
<outpiny0>26</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//実行・停止


run_mode = 1- run_mode;
if( run_mode == 0 ) run_button.setText(&quot;run&quot;); else run_button.setText(&quot;stop&quot;);
interval = Integer.parseInt( interval_field.getText() );
</codetext>
</operation>
<relation>
<ID>_R9</ID>
<pin1name>_P0</pin1name>
<pin2name>_O8</pin2name>
</relation>
<operation>
<ID>_O13</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>32</x0>
<y0>317</y0>
<width>161</width>
<height>67</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>108</inpinx0>
<inpiny0>42</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>2</inpinlinkcount>
<description></description>
<codetext>//シングルステップ実行
exec_one_cycle();
</codetext>
</operation>
<relation>
<ID>_R14</ID>
<pin1name>_P1</pin1name>
<pin2name>_O13</pin2name>
</relation>
<operation>
<ID>_O15</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>164</x0>
<y0>74</y0>
<width>235</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//該当番号のメモリウィンドウを削除


int i = Integer.parseInt( no_field.getText() );
memory_windows.remove(i);
</codetext>
</operation>
<relation>
<ID>_R16</ID>
<pin1name>_P3</pin1name>
<pin2name>_O15</pin2name>
</relation>
<operation>
<ID>_O17</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>162</x0>
<y0>132</y0>
<width>233</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>25</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//該当番号のメモリウィンドウを表示


int i = Integer.parseInt(s);
memory_window w = (memory_window)(memory_windows.get(i));
name_field.setText(w.name);
start_field.setText(hex6(w.start));
end_field.setText(hex6(w.end));
</codetext>
</operation>
<relation>
<ID>_R18</ID>
<pin1name>_P4</pin1name>
<pin2name>_O17</pin2name>
</relation>
<operation>
<ID>_O19</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>167</x0>
<y0>11</y0>
<width>171</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//メモリウィンドウを追加


String n = name_field.getText();
int s = Integer.parseInt(start_field.getText(),16);
int e = Integer.parseInt(end_field.getText(),16);
memory_windows.add( new memory_window( n, s, e ) );
</codetext>
</operation>
<relation>
<ID>_R20</ID>
<pin1name>_P2</pin1name>
<pin2name>_O19</pin2name>
</relation>
<codeclip>
<ID>_C21</ID>
<x0>171</x0>
<y0>465</y0>
<width>198</width>
<height>33</height>
<codetext>// 1サイクル実行
public void exec_one_cycle(){
  int ins, adr, tmp;

    // 命令コードをフェッチ
    ins = mem[ reg_pc++ ];

    // 命令コードに応じた処理
    switch( ins ){

	// hlt;			停止する
    case HLT:
      is_break = 1;
      break;

    // call xxxx;	xxxx番地の内容とPCレジスタの内容を入れ替える
    case CALL:
      adr = mem[ reg_pc++ ] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[ reg_pc++ ] &lt;&lt; 16);
      tmp = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      mem[ adr-- ] = (reg_pc&gt;&gt;16) &amp; 0xff;
      mem[ adr-- ] = (reg_pc&gt;&gt;8)  &amp; 0xff;
      mem[ adr ] = reg_pc &amp; 0xff;
      reg_pc = tmp;
      break;

    // lxi xxxx;	Xレジスタにxxxxの値をセットする
    case LXI:
      reg_x = mem[ reg_pc++ ] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[ reg_pc++ ] &lt;&lt; 16);
      break;

    // ldx xxxx;	Xレジスタにxxxx番地の内容を転送する
    case LDX:
      adr = mem[ reg_pc++ ] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[ reg_pc++ ] &lt;&lt; 16);
      reg_x = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      break;

    // adx xxxx;	Xレジスタにxxxx番地の内容を加算する
    case ADX:
      adr = mem[ reg_pc++ ] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[ reg_pc++ ] &lt;&lt; 16);
      tmp = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      reg_x = reg_x + tmp;
      reg_zf = (reg_x==0? 1 : 0);
      reg_cf = (reg_x&gt;=0x1000000? 1 : 0);
      reg_x &amp;= 0xffffff; 
      break;

    // sbx xxxx;	Xレジスタからxxxx番地の内容を減算する
    case SBX:
      adr = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      tmp = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      reg_x = reg_x - tmp;
      reg_zf = (reg_x==0? 1 : 0);
      reg_cf = (reg_x&lt;0? 1 : 0);
      reg_x &amp;= 0xffffff; 
      break;

    // stx xxxx;	Xレジスタの内容をxxxx番地に転送する
    case  STX:
      adr = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      mem[ adr++ ] = (reg_x&gt;&gt;0)  &amp; 0xff;
      mem[ adr++ ] = (reg_x&gt;&gt;8)  &amp; 0xff;
      mem[ adr ]   = (reg_x&gt;&gt;16) &amp; 0xff;
      break;

    // lai xx;		Aレジスタにxxの値をセットする
    case  LAI:
      reg_a = mem[ reg_pc++ ];
      break;

    // ld;			AレジスタにXレジスタが示す番地の内容を転送する
    case  LD:
      reg_a = mem[ reg_x ];
      break;

    // st;			Xレジスタが示す番地にAレジスタの内容を転送する
    case  ST:
      mem[ reg_x ] = reg_a;
      break;

    // adc;			AレジスタにXレジスタが示す番地の内容をキャリー付き加算する
    case  ADC:
      reg_a = reg_a + mem[ reg_x ] + reg_cf;
      reg_cf = (reg_a&gt;=0x100? 1 : 0);
      reg_a &amp;= 0xff; 
      reg_zf = (reg_a==0? 1 : 0);
      break;

    // sbc;			AレジスタからXレジスタが示す番地の内容をキャリー付き減算する
    case  SBC:
      reg_a = reg_a - mem[ reg_x ] - reg_cf;
      reg_cf = (reg_a&lt;0? 1 : 0);
      reg_a &amp;= 0xff; 
      reg_zf = (reg_a==0? 1 : 0);
      break;

    // and;			AレジスタにXレジスタが示す番地の内容をAND演算する(CFは0にする)
    case  AND:
      reg_a = (reg_a &amp; mem[ reg_x ]) &amp; 0xff;
      reg_zf = (reg_a==0? 1 : 0);
      reg_cf = 0;
      break;

    // or;			AレジスタにXレジスタが示す番地の内容をOR演算する(CFは1にする)
    case  OR:
      reg_a = (reg_a | mem[ reg_x ]) &amp; 0xff;
      reg_zf = (reg_a==0? 1 : 0);
      reg_cf = 1;
      break;

    // ror;			AレジスタのビットをCFを含めて右回転させる
    case  ROR:
      tmp = reg_a;
      reg_a = reg_a &gt;&gt; 1;
      if( reg_cf == 1 ) reg_a = reg_a | 0x80; 
      reg_a &amp;= 0xff; 
      reg_zf = (reg_a==0? 1 : 0);
      reg_cf = ((tmp&amp;0x01)!=0)? 1 : 0;
      break;

    // rol;			AレジスタのビットをCFを含めて左回転させる
    case  ROL:
      tmp = reg_a;
      reg_a = reg_a &lt;&lt; 1;
      if( reg_cf == 1 ) reg_a = reg_a | 0x01; 
      reg_a &amp;= 0xff; 
      reg_zf = (reg_a==0? 1 : 0);
      reg_cf = (tmp &amp; 0x80)!=0? 1 : 0;
      break;

    // jmp xxxx;	xxxx番地にジャンプする
    case  JMP:
      tmp = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      reg_pc = tmp;
      break;

    // jz xxxx;		ZFが１のときxxxx番地にジャンプする
    case  JZ:
      tmp = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      if( reg_zf == 1 ) reg_pc = tmp;
      break;

    // jnz xxxx;	ZFが0のときxxxx番地にジャンプする
    case  JNZ:
      tmp = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      if( reg_zf == 0 ) reg_pc = tmp;
      break;

    // jc xxxx;		CFが１のときxxxx番地にジャンプする
    case  JC:
      tmp = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      if( reg_cf == 1 ) reg_pc = tmp;
      break;

    // jnc xxxx;	CFが0のときxxxx番地にジャンプする
    case  JNC:
      tmp = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      if( reg_cf == 0 ) reg_pc = tmp;
      break;

    // ここから拡張命令

    // callx;		Xレジスタが示す番地の内容とPCレジスタの内容を入れ替える
    case CALLX:
      adr = reg_x;
      tmp = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      mem[ adr-- ] = (reg_pc&gt;&gt;16) &amp; 0xff;
      mem[ adr-- ] = (reg_pc&gt;&gt;8)  &amp; 0xff;
      mem[ adr ] = reg_pc &amp; 0xff;
      reg_pc = tmp;
      break;

    // cally;		Yレジスタが示す番地の内容とPCレジスタの内容を入れ替える
    case CALLY:
      adr = reg_y;
      tmp = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      mem[ adr-- ] = (reg_pc&gt;&gt;16) &amp; 0xff;
      mem[ adr-- ] = (reg_pc&gt;&gt;8)  &amp; 0xff;
      mem[ adr ] = reg_pc &amp; 0xff;
      reg_pc = tmp;
      break;

    // lyi xxxx;	Yレジスタにxxxxの値をセットする
    case LYI:
      reg_y = mem[ reg_pc++ ] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[ reg_pc++ ] &lt;&lt; 16);
      break;

    // ldy xxxx;	Yレジスタにxxxx番地の内容を転送する
    case LDY:
      adr = mem[ reg_pc++ ] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[ reg_pc++ ] &lt;&lt; 16);
      reg_y = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      break;

    // ady xxxx;	Yレジスタにxxxx番地の内容を加算する
    case ADY:
      adr = mem[ reg_pc++ ] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[ reg_pc++ ] &lt;&lt; 16);
      tmp = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      reg_y = reg_y + tmp;
      reg_zf = (reg_y==0? 1 : 0);
      reg_cf = (reg_y&gt;=0x1000000? 1 : 0);
      reg_y &amp;= 0xffffff; 
      break;

    // sby xxxx;	Yレジスタからxxxx番地の内容を減算する
    case SBY:
      adr = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      tmp = mem[ adr++ ] | (mem[ adr++ ] &lt;&lt; 8) | (mem[ adr ] &lt;&lt; 16);
      reg_y = reg_y - tmp;
      reg_zf = (reg_y==0? 1 : 0);
      reg_cf = (reg_y&lt;0? 1 : 0);
      reg_y &amp;= 0xffffff; 
      break;

    // sty xxxx;	Yレジスタの内容をxxxx番地に転送する
    case STY:
      adr = mem[ reg_pc++] | (mem[ reg_pc++ ] &lt;&lt; 8) | (mem[reg_pc++] &lt;&lt; 16);
      mem[ adr++ ] = (reg_y&gt;&gt;0)  &amp; 0xff;
      mem[ adr++ ] = (reg_y&gt;&gt;8)  &amp; 0xff;
      mem[ adr ]   = (reg_y&gt;&gt;16) &amp; 0xff;
      break;

    // ld_y;		AレジスタにYレジスタが示す番地の内容を転送する
    case LD_Y:
      reg_a = mem[ reg_y ];
      break;

    // st_y;		Yレジスタが示す番地にAレジスタの内容を転送する
    case ST_Y:
      mem[ reg_y ] = reg_a;
      break;

    // adc_y;		AレジスタにYレジスタが示す番地の内容をキャリー付き加算する
    case ADC_Y:
      reg_a = reg_a + mem[ reg_y ] + reg_cf;
      reg_cf = (reg_a &gt;= 0x100)? 1 : 0;
      reg_a &amp;= 0xff; 
      reg_zf = (reg_a==0)? 1 : 0;
      break;

    // sbc_y;		AレジスタからYレジスタが示す番地の内容をキャリー付き減算する
    case SBC_Y:
      reg_a = reg_a - mem[ reg_y ] - reg_cf;
      reg_cf = (reg_a &lt; 0)? 1 : 0;
      reg_a &amp;= 0xff; 
      reg_zf = (reg_a==0)? 1 : 0;
      break;

    // and_y;		AレジスタにYレジスタが示す番地の内容をAND演算する(CFは0にする)
    case AND_Y:
      reg_a = (reg_a &amp; mem[ reg_y ]) &amp; 0xff;
      reg_zf = (reg_a==0? 1 : 0);
      reg_cf = 0;
      break;

    // or_y;		AレジスタにYレジスタが示す番地の内容をOR演算する(CFは1にする)
    case OR_Y:
      reg_a = (reg_a | mem[ reg_y ]) &amp; 0xff;
      reg_zf = (reg_a==0? 1 : 0);
      reg_cf = 1;
      break;

    }

    // メモリウィンドウ表示処理
    message_area.setText(&quot;&quot;);
    int n = memory_windows.size();
    for( int i = 0; i &lt; n; i++ ){
      memory_window w = (memory_window)(memory_windows.get(i));
      message_area.append(&quot;(&quot;+i+&quot;) &quot;+w.name+&quot;\n&quot;+hex6(w.start)+&quot;: &quot;);
      for( int ad = w.start; ad &lt;= w.end; ad++ ){
        message_area.append( hex2(mem[ad])+ &quot; &quot; );
      }
      message_area.append( &quot;\n\n&quot; );
    }

    // I/O同期
    io_sync();
}
</codetext>
</codeclip>
<aobject>
<ID>_A24</ID>
<x0>230</x0>
<y0>363</y0>
<width>147</width>
<height>85</height>
<ID_maker>11</ID_maker>
<objectname>Interval_Timer</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>188</x0>
<y0>270</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_P0</ID>
<x0>200</x0>
<y0>364</y0>
<width>99</width>
<height>25</height>
<text>play_pause()</text>
<px>1</px>
<py>61</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>476</x0>
<y0>155</y0>
<width>60</width>
<height>30</height>
<text>Action()</text>
<px>0</px>
<py>41</py>
</pin>
<codeclip>
<ID>_C3</ID>
<x0>200</x0>
<y0>5</y0>
<width>272</width>
<height>198</height>
<codetext>XTimer  timer;
class XTimer implements ActionListener{
  javax.swing.Timer unit;
 
  XTimer( int del ){
   unit = new javax.swing.Timer( del, this );
  }

  public void actionPerformed( ActionEvent e){
    Action();
  }

}
</codetext>
</codeclip>
<operation>
<ID>_O7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>321</x0>
<y0>255</y0>
<width>171</width>
<height>53</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>3</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>45</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// タイマーの起動・停止


if( run_mode != 0 ){
 timer = new XTimer( interval );
 timer.unit.start();
}
 else timer.unit.stop();
</codetext>
</operation>
<action>
<ID>_A9</ID>
<comp1name>_P0</comp1name>
<comp2name>_O7</comp2name>
</action>
</aobject>
<relation>
<ID>_R25</ID>
<pin1name>_O8</pin1name>
<pin2name>_A24(_P0)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_A24(_P2)</pin1name>
<pin2name>_O13</pin2name>
</relation>
<codeclip>
<ID>_C32</ID>
<x0>411</x0>
<y0>1</y0>
<width>573</width>
<height>573</height>
<codetext>// 仮想マシンの命令セット
static final int HLT=0;	// hlt;	停止する
static final int CALL=1;	// call xxxx;	xxxx番地の内容とPCレジスタの内容を入れ替える
static final int LXI=2;	// lxi xxxx;	Xレジスタにxxxxの値をセットする
static final int LDX=3;	// ldx xxxx;	Xレジスタにxxxx番地の内容を転送する
static final int ADX=4;	// adx xxxx;	Xレジスタにxxxx番地の内容を加算する
static final int SBX=5;	// sbx xxxx;	Xレジスタからxxxx番地の内容を減算する
static final int STX=6;	// stx xxxx;	Xレジスタの内容をxxxx番地に転送する
static final int LAI=7;	// lai xx;	Aレジスタにxxの値をセットする
static final int LD=8;	// ld;	AレジスタにXレジスタが示す番地の内容を転送する
static final int ST=9;	// st;	Xレジスタが示す番地にAレジスタの内容を転送する
static final int ADC=10;	// adc;	AレジスタにXレジスタが示す番地の内容をキャリー付き加算する
static final int SBC=11;	// sbc;	AレジスタからXレジスタが示す番地の内容をキャリー付き減算する
static final int AND=12;	// and;	AレジスタにXレジスタが示す番地の内容をAND演算する(CFは0にする)
static final int OR=13;	// or;	AレジスタにXレジスタが示す番地の内容をOR演算する(CFは1にする)
static final int ROR=14;	// ror;	AレジスタのビットをCFを含めて右回転させる
static final int ROL=15;	// rol;	AレジスタのビットをCFを含めて左回転させる
static final int JMP=16;	// jmp xxxx;	xxxx番地にジャンプする
static final int JZ=17;	// jz xxxx;	ZFが１のときxxxx番地にジャンプする
static final int JNZ=18;	// jnz xxxx;	ZFが0のときxxxx番地にジャンプする
static final int JC=19;	// jc xxxx;	CFが１のときxxxx番地にジャンプする
static final int JNC=20;	// jnc xxxx;	CFが0のときxxxx番地にジャンプする

// ここから拡張命令(可能ならば実装する)
static final int CALLX=21;	// callx;	Xレジスタが示す番地の内容とPCレジスタの内容を入れ替える
static final int CALLY=22;	// cally;	Yレジスタが示す番地の内容とPCレジスタの内容を入れ替える
static final int LYI=23;	// lyi xxxx;	Yレジスタにxxxxの値をセットする
static final int LDY=24;	// ldy xxxx;	Yレジスタにxxxx番地の内容を転送する
static final int ADY=25;	// ady xxxx;	Yレジスタにxxxx番地の内容を加算する
static final int SBY=26;	// sby xxxx;	Yレジスタからxxxx番地の内容を減算する
static final int STY=27;	// sty xxxx;	Yレジスタの内容をxxxx番地に転送する
static final int LD_Y=28;	// ld_y;	AレジスタにYレジスタが示す番地の内容を転送する
static final int ST_Y=29;	// st_y;	Yレジスタが示す番地にAレジスタの内容を転送する
static final int ADC_Y=30;// adc_y;	AレジスタにYレジスタが示す番地の内容をキャリー付き加算する
static final int SBC_Y=31;	// sbc_y;	AレジスタからYレジスタが示す番地の内容をキャリー付き減算する
static final int AND_Y=32;// and_y;	AレジスタにYレジスタが示す番地の内容をAND演算する(CFは0にする)
static final int OR_Y=33;	// or_y;	AレジスタにYレジスタが示す番地の内容をOR演算する(CFは1にする)

</codetext>
</codeclip>
</xobject>
<codeclip>
<ID>_C9</ID>
<x0>500</x0>
<y0>426</y0>
<width>366</width>
<height>184</height>
<codetext>// 変数
int[] mem;
int reg_pc, reg_x, reg_y, reg_a, reg_cf, reg_zf; 
JButton run_button; int run_mode = 0;
JTextField pc_reg, x_reg, y_reg, a_reg;
JTextField adrs_field, data_field;
JLabel cf_reg, zf_reg;
JTextArea message_area;
JTextField clock_field; int clock=0;
JTextField interval_field; int interval=1000;
JTextField no_field, name_field, start_field, end_field;
static final int AD_SIZE = 0x1000000;
int is_break;
</codetext>
</codeclip>
<relation>
<ID>_R11</ID>
<pin1name>_A0(_PArun_button)</pin1name>
<pin2name>_X6(_P0)</pin2name>
</relation>
<relation>
<ID>_R16</ID>
<pin1name>_A0(_PAsingle_button)</pin1name>
<pin2name>_X6(_P1)</pin2name>
</relation>
<relation>
<ID>_R17</ID>
<pin1name>_A0(_PAadd_button)</pin1name>
<pin2name>_X6(_P2)</pin2name>
</relation>
<relation>
<ID>_R18</ID>
<pin1name>_A0(_PAremove_button)</pin1name>
<pin2name>_X6(_P3)</pin2name>
</relation>
<xobject>
<ID>_X19</ID>
<x0>465</x0>
<y0>0</y0>
<width>223</width>
<height>403</height>
<ID_maker>72</ID_maker>
<objectname>set_variables</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>0</x0>
<y0>116</y0>
<width>164</width>
<height>19</height>
<text>x_reg_is(JTextField t)</text>
<px>0</px>
<py>116</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>0</x0>
<y0>136</y0>
<width>163</width>
<height>22</height>
<text>y_reg_is(JTextField t)</text>
<px>0</px>
<py>91</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>0</x0>
<y0>163</y0>
<width>148</width>
<height>23</height>
<text>a_reg_is(JTextField t)</text>
<px>0</px>
<py>68</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>0</x0>
<y0>25</y0>
<width>132</width>
<height>22</height>
<text>cf_reg_is(JLabel l)</text>
<px>0</px>
<py>139</py>
</pin>
<pin>
<ID>_P7</ID>
<x0>0</x0>
<y0>51</y0>
<width>138</width>
<height>22</height>
<text>zf_reg_is(JLabel l)</text>
<px>0</px>
<py>160</py>
</pin>
<pin>
<ID>_P10</ID>
<x0>3</x0>
<y0>357</y0>
<width>205</width>
<height>22</height>
<text>message_area_is(JTextArea t)</text>
<px>0</px>
<py>189</py>
</pin>
<pin>
<ID>_P11</ID>
<x0>0</x0>
<y0>226</y0>
<width>184</width>
<height>21</height>
<text>clock_field_is(JTextField t)</text>
<px>0</px>
<py>210</py>
</pin>
<pin>
<ID>_P12</ID>
<x0>1</x0>
<y0>248</y0>
<width>162</width>
<height>24</height>
<text>no_field_is(JTextField t)</text>
<px>0</px>
<py>232</py>
</pin>
<pin>
<ID>_P13</ID>
<x0>0</x0>
<y0>275</y0>
<width>184</width>
<height>21</height>
<text>start_field_is(JTextField t)</text>
<px>0</px>
<py>271</py>
</pin>
<pin>
<ID>_P14</ID>
<x0>0</x0>
<y0>298</y0>
<width>167</width>
<height>27</height>
<text>end_field_is(JTextField t)</text>
<px>0</px>
<py>293</py>
</pin>
<pin>
<ID>_P15</ID>
<x0>3</x0>
<y0>326</y0>
<width>211</width>
<height>27</height>
<text>interval_field_is(JTextField t)</text>
<px>0</px>
<py>315</py>
</pin>
<pin>
<ID>_P16</ID>
<x0>938</x0>
<y0>31</y0>
<width>52</width>
<height>25</height>
<text>start()</text>
<px>0</px>
<py>31</py>
</pin>
<pin>
<ID>_P17</ID>
<x0>0</x0>
<y0>83</y0>
<width>158</width>
<height>24</height>
<text>pc_reg_is(JTextField t)</text>
<px>0</px>
<py>334</py>
</pin>
<operation>
<ID>_O18</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>673</x0>
<y0>2</y0>
<width>237</width>
<height>55</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>198</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>30</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>memory_windows = new Vector();
mem = new int[AD_SIZE];
</codetext>
</operation>
<relation>
<ID>_R19</ID>
<pin1name>_P16</pin1name>
<pin2name>_O18</pin2name>
</relation>
<operation>
<ID>_O21</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>160</x0>
<y0>3</y0>
<width>121</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>25</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cf_reg = l;
</codetext>
</operation>
<relation>
<ID>_R22</ID>
<pin1name>_P6</pin1name>
<pin2name>_O21</pin2name>
</relation>
<operation>
<ID>_O23</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>299</x0>
<y0>23</y0>
<width>121</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>zf_reg = l;
</codetext>
</operation>
<relation>
<ID>_R28</ID>
<pin1name>_P7</pin1name>
<pin2name>_O23</pin2name>
</relation>
<operation>
<ID>_O37</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>196</x0>
<y0>200</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>clock_field = t;
</codetext>
</operation>
<relation>
<ID>_R38</ID>
<pin1name>_P11</pin1name>
<pin2name>_O37</pin2name>
</relation>
<operation>
<ID>_O39</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>324</x0>
<y0>221</y0>
<width>125</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>no_field = t;
</codetext>
</operation>
<relation>
<ID>_R40</ID>
<pin1name>_P12</pin1name>
<pin2name>_O39</pin2name>
</relation>
<operation>
<ID>_O41</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>453</x0>
<y0>246</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>start_field = t;
</codetext>
</operation>
<relation>
<ID>_R42</ID>
<pin1name>_P13</pin1name>
<pin2name>_O41</pin2name>
</relation>
<operation>
<ID>_O43</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>580</x0>
<y0>273</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>end_field = t;
</codetext>
</operation>
<relation>
<ID>_R44</ID>
<pin1name>_P14</pin1name>
<pin2name>_O43</pin2name>
</relation>
<operation>
<ID>_O45</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>709</x0>
<y0>301</y0>
<width>138</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>interval_field = t;
</codetext>
</operation>
<relation>
<ID>_R46</ID>
<pin1name>_P15</pin1name>
<pin2name>_O45</pin2name>
</relation>
<operation>
<ID>_O47</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>856</x0>
<y0>331</y0>
<width>139</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextArea t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>message_area = t;
</codetext>
</operation>
<relation>
<ID>_R48</ID>
<pin1name>_P10</pin1name>
<pin2name>_O47</pin2name>
</relation>
<operation>
<ID>_O49</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>426</x0>
<y0>53</y0>
<width>137</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>pc_reg = t;
</codetext>
</operation>
<relation>
<ID>_R50</ID>
<pin1name>_P17</pin1name>
<pin2name>_O49</pin2name>
</relation>
<operation>
<ID>_O51</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>567</x0>
<y0>81</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>x_reg = t;
</codetext>
</operation>
<relation>
<ID>_R52</ID>
<pin1name>_P0</pin1name>
<pin2name>_O51</pin2name>
</relation>
<operation>
<ID>_O53</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>702</x0>
<y0>110</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>y_reg = t;
</codetext>
</operation>
<relation>
<ID>_R54</ID>
<pin1name>_P1</pin1name>
<pin2name>_O53</pin2name>
</relation>
<operation>
<ID>_O55</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>830</x0>
<y0>137</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>a_reg = t;
</codetext>
</operation>
<relation>
<ID>_R56</ID>
<pin1name>_P2</pin1name>
<pin2name>_O55</pin2name>
</relation>
<pin>
<ID>_P59</ID>
<x0>0</x0>
<y0>415</y0>
<width>169</width>
<height>22</height>
<text>run_button_is(JButton b)</text>
<px>0</px>
<py>48</py>
</pin>
<operation>
<ID>_O60</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>211</x0>
<y0>390</y0>
<width>123</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JButton b)</inpintext>
<inpinx0>2</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>88</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>run_button = b;
</codetext>
</operation>
<relation>
<ID>_R61</ID>
<pin1name>_P59</pin1name>
<pin2name>_O60</pin2name>
</relation>
<pin>
<ID>_P62</ID>
<x0>0</x0>
<y0>449</y0>
<width>180</width>
<height>26</height>
<text>adrs_field_is(JTextField t)</text>
<px>0</px>
<py>373</py>
</pin>
<pin>
<ID>_P63</ID>
<x0>0</x0>
<y0>488</y0>
<width>169</width>
<height>24</height>
<text>data_field_is(JTextField t)</text>
<px>0</px>
<py>352</py>
</pin>
<operation>
<ID>_O65</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>338</x0>
<y0>424</y0>
<width>138</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>adrs_field = t;
</codetext>
</operation>
<operation>
<ID>_O66</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>482</x0>
<y0>462</y0>
<width>138</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>data_field = t;
</codetext>
</operation>
<relation>
<ID>_R67</ID>
<pin1name>_P62</pin1name>
<pin2name>_O65</pin2name>
</relation>
<relation>
<ID>_R68</ID>
<pin1name>_P63</pin1name>
<pin2name>_O66</pin2name>
</relation>
<pin>
<ID>_P69</ID>
<x0>0</x0>
<y0>540</y0>
<width>182</width>
<height>30</height>
<text>name_field_is(JTextField t)</text>
<px>0</px>
<py>252</py>
</pin>
<operation>
<ID>_O70</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>265</x0>
<y0>518</y0>
<width>134</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>name_field = t;
</codetext>
</operation>
<relation>
<ID>_R71</ID>
<pin1name>_P69</pin1name>
<pin2name>_O70</pin2name>
</relation>
</xobject>
<relation>
<ID>_R33</ID>
<pin1name>_A0(_Pmessage_area)</pin1name>
<pin2name>_X19(_P10)</pin2name>
</relation>
<relation>
<ID>_R34</ID>
<pin1name>_A0(_Pclock_field)</pin1name>
<pin2name>_X19(_P11)</pin2name>
</relation>
<relation>
<ID>_R35</ID>
<pin1name>_A0(_Pno_field)</pin1name>
<pin2name>_X19(_P12)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_A0(_Pstart_field)</pin1name>
<pin2name>_X19(_P13)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_A0(_Pend_field)</pin1name>
<pin2name>_X19(_P14)</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_A0(_Pinterval_field)</pin1name>
<pin2name>_X19(_P15)</pin2name>
</relation>
<relation>
<ID>_R39</ID>
<pin1name>_A0(_PAno_field)</pin1name>
<pin2name>_X6(_P4)</pin2name>
</relation>
<codeclip>
<ID>_C40</ID>
<x0>696</x0>
<y0>175</y0>
<width>302</width>
<height>152</height>
<codetext>// メモリウィンドウ
Vector memory_windows;
class memory_window{
  String name;
  int start;
  int end;
  memory_window( String n, int s, int e ){
    name = n; start=s; end=e;
  }
}
</codetext>
</codeclip>
<xobject>
<ID>_X42</ID>
<x0>12</x0>
<y0>470</y0>
<width>143</width>
<height>111</height>
<ID_maker>13</ID_maker>
<objectname>memory_edit</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>17</x0>
<y0>33</y0>
<width>125</width>
<height>25</height>
<text>adrs_set(String s)</text>
<px>0</px>
<py>29</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>52</x0>
<y0>98</y0>
<width>60</width>
<height>30</height>
<text>inc()</text>
<px>0</px>
<py>50</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>54</x0>
<y0>150</y0>
<width>60</width>
<height>30</height>
<text>dec()</text>
<px>0</px>
<py>67</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>39</x0>
<y0>220</y0>
<width>112</width>
<height>25</height>
<text>mem_set()</text>
<px>0</px>
<py>83</py>
</pin>
<operation>
<ID>_O4</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>248</x0>
<y0>22</y0>
<width>233</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>2</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>78</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 指定アドレスメモリのデータを表示


int address = Integer.parseInt( s, 16 );
adrs_field.setText(hex6(address));
data_field.setText(hex2(mem[address]));
</codetext>
</operation>
<relation>
<ID>_R5</ID>
<pin1name>_P0</pin1name>
<pin2name>_O4</pin2name>
</relation>
<operation>
<ID>_O6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>251</x0>
<y0>86</y0>
<width>263</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// アドレスを+1してメモリのデータを表示


int address = Integer.parseInt( adrs_field.getText(), 16 );
address++;
if( address &gt; 0xffffff ) address=0;
adrs_field.setText(hex6(address));
data_field.setText(hex2(mem[address]));
</codetext>
</operation>
<relation>
<ID>_R7</ID>
<pin1name>_P1</pin1name>
<pin2name>_O6</pin2name>
</relation>
<operation>
<ID>_O9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>250</x0>
<y0>142</y0>
<width>268</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// アドレスを-1してメモリのデータを表示


int address = Integer.parseInt( adrs_field.getText(), 16 );
address--;
if( address &lt; 0 ) address=0xffffff;
adrs_field.setText(hex6(address));
data_field.setText(hex2(mem[address]));
</codetext>
</operation>
<relation>
<ID>_R10</ID>
<pin1name>_P2</pin1name>
<pin2name>_O9</pin2name>
</relation>
<operation>
<ID>_O11</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>255</x0>
<y0>206</y0>
<width>267</width>
<height>43</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 表示されているデータをメモリに書き込む

int address = Integer.parseInt( adrs_field.getText(), 16 );
mem[address] = Integer.parseInt( data_field.getText(), 16 );
io_sync();
</codetext>
</operation>
<relation>
<ID>_R12</ID>
<pin1name>_P3</pin1name>
<pin2name>_O11</pin2name>
</relation>
</xobject>
<relation>
<ID>_R44</ID>
<pin1name>_A0(_PAinc_addr)</pin1name>
<pin2name>_X42(_P1)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_A0(_PAdec_addr)</pin1name>
<pin2name>_X42(_P2)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_A0(_PAmem_set)</pin1name>
<pin2name>_X42(_P3)</pin2name>
</relation>
<codeclip>
<ID>_C48</ID>
<x0>694</x0>
<y0>136</y0>
<width>229</width>
<height>34</height>
<codetext>// 長さが2文字の16進数文字列を返す
public String hex2( int i ){
  String s = Integer.toHexString(i);
  int l = s.length();
  if( l ==1 ) return &quot;0&quot;+s;
  return s;
}
</codetext>
</codeclip>
<relation>
<ID>_R53</ID>
<pin1name>_A0(_Prun_button)</pin1name>
<pin2name>_X19(_P59)</pin2name>
</relation>
<xobject>
<ID>_X55</ID>
<x0>699</x0>
<y0>0</y0>
<width>113</width>
<height>78</height>
<ID_maker>62</ID_maker>
<objectname>peripheral</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>8</x0>
<y0>22</y0>
<width>60</width>
<height>30</height>
<text>io_sync()</text>
<px>6</px>
<py>56</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>18</x0>
<y0>90</y0>
<width>60</width>
<height>30</height>
<text>start()</text>
<px>6</px>
<py>28</py>
</pin>
<operation>
<ID>_O4</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>93</x0>
<y0>7</y0>
<width>273</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// メモリと周辺装置の同期(メモリマップドIO)


if( KeyCode != 0 ) mem[KEY_CODE] = KeyCode;
KeyCode = 0;
cmd_line.setText(&quot;&quot;);
if( mem[PRT_STROBE] != 0 ){
  mem[PRT_STROBE] = 0;
  int c = mem[PRT_DATA];
  if( c == 12 ) disp.setText(&quot;&quot;);
  else disp.append(&quot;&quot;+(char)(byte)(c &amp; 0xff));
}
</codetext>
</operation>
<relation>
<ID>_R5</ID>
<pin1name>_P0</pin1name>
<pin2name>_O4</pin2name>
</relation>
<operation>
<ID>_O6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>406</x0>
<y0>30</y0>
<width>162</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JFrame f)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>84</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//位置設定


f.setLocation(418,0);
</codetext>
</operation>
<codeclip>
<ID>_C51</ID>
<x0>353</x0>
<y0>299</y0>
<width>546</width>
<height>312</height>
<codetext>keyinput_listener listener;
class keyinput_listener implements DocumentListener{
  String s;
  boolean allow = true;
  public void caretPositionChanged(InputMethodEvent e){}
  public void changedUpdate(DocumentEvent e){}//属性が変更されたときの処理
  public void insertUpdate(DocumentEvent e){
    KeyCode = 0;
    if(!is_gets){
      if( allow &amp;&amp; (s = cmd_line.getText()).length() &gt; 0 ){
        allow = false;
        KeyCode = (int)(byte)s.charAt(0);
        if( KeyCode ==10 ) KeyCode = 13;
        allow = true;
         }
      }
   }
  public void removeUpdate(DocumentEvent e){}//ドキュメントから削除されたときの処理

}
</codetext>
</codeclip>
<relation>
<ID>_R52</ID>
<pin1name>_P2</pin1name>
<pin2name>_A50(_Pstart)</pin2name>
</relation>
<relation>
<ID>_R53</ID>
<pin1name>_A50(_PGUIout)</pin1name>
<pin2name>_O6</pin2name>
</relation>
<codeclip>
<ID>_C54</ID>
<x0>45</x0>
<y0>296</y0>
<width>286</width>
<height>149</height>
<codetext>//Variables
 int KeyCode=0;
 int KeyAck = 0;
 boolean      is_gets = false;
JTextField cmd_line;
JTextArea disp;
static final int KEY_CODE=0xfffffd;
static final int PRT_STROBE=0xfffffe;
static final int PRT_DATA=0xffffff;
</codetext>
</codeclip>
<operation>
<ID>_O55</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>407</x0>
<y0>109</y0>
<width>125</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextArea t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>109</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>disp = t;
</codetext>
</operation>
<operation>
<ID>_O57</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>404</x0>
<y0>167</y0>
<width>125</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>109</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cmd_line = t;


cmd_line.getDocument().addDocumentListener(listener = new keyinput_listener());
</codetext>
</operation>
<relation>
<ID>_R58</ID>
<pin1name>_A50(_Pcmd_line)</pin1name>
<pin2name>_O57</pin2name>
</relation>
<relation>
<ID>_R59</ID>
<pin1name>_A50(_Pdisp)</pin1name>
<pin2name>_O55</pin2name>
</relation>
<operation>
<ID>_O60</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>402</x0>
<y0>226</y0>
<width>128</width>
<height>55</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>33</inpiny0>
<inpinwidth>81</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>KeyCode = &apos;\r&apos;;
</codetext>
</operation>
<relation>
<ID>_R61</ID>
<pin1name>_A50(_PAcmd_line)</pin1name>
<pin2name>_O60</pin2name>
</relation>
<aobject>
<ID>_A50</ID>
<x0>100</x0>
<y0>100</y0>
<width>280</width>
<objectname>GUI</objectname>
<description>GUIオブジェクト
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created(JFrame f)</text>
<px>0</px>
<py>54</py>
</pin>
<pin>
<ID>_PGUIclosed</ID>
<x0>310</x0>
<y0>0</y0>
<width>180</width>
<height>26</height>
<text>GUI_closed()</text>
<px>100</px>
<py>6</py>
</pin>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// GUIを作成する
XGUI x = new XGUI();

</codetext>
</operation>
<pin>
<ID>_Pdisp</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>disp_created(JTextArea t)</text>
<px>0</px>
<py>72</py>
</pin>
<pin>
<ID>_Pcmd_line</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>cmd_line_created(JTextField t)</text>
<px>0</px>
<py>90</py>
</pin>
<pin>
<ID>_PAcmd_line</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>cmd_line_input(String s)</text>
<px>0</px>
<py>108</py>
</pin>
<codeclip>
<ID>_CXSTART</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>26</height>
<codetext> class XGUI extends JFrame implements WindowListener{
 JPanel cnt;
disp Idisp;
 class disp extends JTextArea{
 JScrollPane scrl;
  disp(){
 setOpaque( true );
 setName(  &quot;disp&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;&quot; );
 scrl = new JScrollPane( this );
 disp_created( this );
}
}
cmd_line Icmd_line;
 class cmd_line extends JTextField implements ActionListener{
  cmd_line(){
 setOpaque( true );
 setName(  &quot;cmd_line&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;&quot; );
 addActionListener( this );
 cmd_line_created( this );
}
 public void actionPerformed( ActionEvent e ){ cmd_line_input( getText() ); }
}
 XGUI(){
 setTitle(&quot;CARD8 Console&quot;);
 cnt = new JPanel( new BorderLayout() );
 cnt.setPreferredSize(  new  Dimension( 403, 524 ) );
 ((Component)cnt).setBackground( new Color( 192, 192, 192 ) );
 Idisp = new disp();
 cnt.add( Idisp.scrl, 0 );
 cnt.getLayout().removeLayoutComponent( Idisp.scrl );
 (  Idisp.scrl ).setBounds( 1, 35, 713, 491 );
 Icmd_line = new cmd_line();
 cnt.add( Icmd_line, 0 );
 cnt.getLayout().removeLayoutComponent( Icmd_line );
 Icmd_line.setBounds( 0, 0, 400, 30 );
 setContentPane( cnt );
 pack();
 addWindowListener( this );
 setVisible( true );
 GUI_created( this );
}
 public void windowActivated( WindowEvent e ){}
 public void windowClosed( WindowEvent e ){}
 public void windowClosing( WindowEvent e ){ GUI_closed(); }
 public void windowDeactivated( WindowEvent e ){}
 public void windowDeiconified( WindowEvent e ){}
 public void windowIconified( WindowEvent e ){}
 public void windowOpened( WindowEvent e ){}
}
</codetext>
</codeclip>
<ID_maker>23</ID_maker>
<height>130</height>
<レイアウト>CARD8 Console
403
524
192
192
192
xxscale=1
TEXTAREA;disp;null;1;35;713;491;51;51;51;255;255;255;Dialog;12;1;1;1;JTextArea;
TEXTFIELD;cmd_line;null;0;0;400;30;51;51;51;255;255;255;Dialog;12;1;1;1;JTextField;
</レイアウト>
</aobject>
</xobject>
<pin>
<ID>_P57</ID>
<x0>842</x0>
<y0>57</y0>
<width>63</width>
<height>22</height>
<text>io_sync()</text>
<px>10</px>
<py>40</py>
</pin>
<relation>
<ID>_R58</ID>
<pin1name>_P57</pin1name>
<pin2name>_X55(_P0)</pin2name>
</relation>
<relation>
<ID>_R59</ID>
<pin1name>_X19(_P16)</pin1name>
<pin2name>_X55(_P2)</pin2name>
</relation>
<プロパティ>
<ID>properties</ID>
<LookandFeel>javax.swing.plaf.metal.MetalLookAndFeel</LookandFeel>
<MainWinx0>0</MainWinx0>
<MainWiny0>0</MainWiny0>
<MainWinWidth>1024</MainWinWidth>
<MainWinHeight>741</MainWinHeight>
<MesgWinx0>0</MesgWinx0>
<MesgWiny0>0</MesgWiny0>
<MesgWinWidth>1024</MesgWinWidth>
<MesgWinHeight>745</MesgWinHeight>
<FileWinx0>36</FileWinx0>
<FileWiny0>476</FileWiny0>
<FileWinWidth>578</FileWinWidth>
<FileWinHeight>262</FileWinHeight>
<EditWinx0>347</EditWinx0>
<EditWiny0>0</EditWiny0>
<EditWinWidth>676</EditWinWidth>
<EditWinHeight>541</EditWinHeight>
<PropWinx0>1</PropWinx0>
<PropWiny0>1</PropWiny0>
<PropWinWidth>615</PropWinWidth>
<PropWinHeight>448</PropWinHeight>
<DividerLocation1>2</DividerLocation1>
<DividerLocation2>2</DividerLocation2>
<ToolBarVisible>1</ToolBarVisible>
<ViewSourceAtCompile>0</ViewSourceAtCompile>
<NoSourceCreate>0</NoSourceCreate>
<JavaEditCommand>geany</JavaEditCommand>
<JavaViewCommand></JavaViewCommand>
<HelpCommand>xdg-open ./help/manual.html</HelpCommand>
<ApplicationType>0</ApplicationType>
<CompileCommand0>./compile_java</CompileCommand0>
<RunCommand0>./run_java</RunCommand0>
<GUIDesignerCommand0>java -jar guidsin.jar -java</GUIDesignerCommand0>
<ImportFiles0> import java.awt.*;
 import java.awt.event.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.geom.*;
import java.awt.print.*;
import javax.swing.border.*;
import javax.swing.filechooser.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.image.BufferedImage;
import javax.sound.sampled.*;

class Starter{
  public static void main( String args[] ){
    %AppName% ap = new %AppName%();
    ap.ARGS = args;
    ap.Start();
  }
}
</ImportFiles0>
<ProgramStartupCode0> String[] ARGS;
</ProgramStartupCode0>
<NativeHelpCommand0></NativeHelpCommand0>
<CompileCommand1></CompileCommand1>
<RunCommand1></RunCommand1>
<GUIDesignerCommand1>java -jar guidsin.jar -applet</GUIDesignerCommand1>
<ImportFiles1> import java.awt.*;
 import java.awt.event.*;
 import java.applet.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
 public class javatext extends Applet {
   %AppName% ap;
   public void init() {
     ap = new %AppName%();
     ap.APPLET = this;
     ap.Start();
   }
 }
</ImportFiles1>
<ProgramStartupCode1> Applet APPLET;
</ProgramStartupCode1>
<NativeHelpCommand1></NativeHelpCommand1>
<CompileCommand2></CompileCommand2>
<RunCommand2></RunCommand2>
<GUIDesignerCommand2></GUIDesignerCommand2>
<ImportFiles2>#include &lt;stdio.h&gt;

void Startup();
</ImportFiles2>
<ProgramStartupCode2>int main(){
 Startup();
 %AppName%::Start();
 }
</ProgramStartupCode2>
<NativeHelpCommand2></NativeHelpCommand2>
<CompileCommand3></CompileCommand3>
<RunCommand3></RunCommand3>
<GUIDesignerCommand3>java -jar guidsin.jar -cpp</GUIDesignerCommand3>
<ImportFiles3>#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;math.h&gt;
#include &quot;Ekagen.h&quot;
void Startup();
</ImportFiles3>
<ProgramStartupCode3>void Emain(){
Startup();
%AppName%::Start();
}
</ProgramStartupCode3>
<NativeHelpCommand3></NativeHelpCommand3>
<MoveStep>8</MoveStep>
<ImageEditCommand></ImageEditCommand>
<CompilerFileName>javac.exe</CompilerFileName>
<CompileCommand4>./compile_android Test com example test</CompileCommand4>
<RunCommand4>./run_android Test com example test</RunCommand4>
<GUIDesignerCommand4>java -jar guidsin.jar -android</GUIDesignerCommand4>
<ImportFiles4>package com.example.test;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.widget.Button;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.widget.EditText;
import android.text.SpannableStringBuilder;
import android.text.TextWatcher;
import android.text.Editable;
import android.graphics.Matrix;
import android.graphics.Typeface;
import android.graphics.RectF;
import android.graphics.BitmapFactory;
import java.io.*;
 import java.net.*;
import java.util.*;
import java.text.SimpleDateFormat;
import android.media.MediaPlayer;
import android.os.Handler;
import android.content.res.Configuration;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.app.Activity;
import android.graphics.Color;

import android.widget.AbsoluteLayout;
import android.widget.*;
import android.view.Gravity;
import android.view.View.OnClickListener;

import android.hardware.Camera;

public class HelloWorld extends Activity {
  public void onCreate(Bundle bundle) {
    super.onCreate(bundle);
    %AppName% ap = new %AppName%();
    ap.ACTIVITY = this;
    ap.Start();
  }
}
</ImportFiles4>
<ProgramStartupCode4>Activity ACTIVITY;
</ProgramStartupCode4>
<NativeHelpCommand4>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.test&quot;
    android:versionCode=&quot;1&quot;
    android:versionName=&quot;1.0&quot; &gt;

    
    
  &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.camera&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.usb.host&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot;/&gt;
  &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;

  &lt;uses-sdk android:minSdkVersion=&quot;3&quot; android:targetSdkVersion=&quot;21&quot;/&gt;
  
 
    &lt;application android:label=&quot;@string/app_name&quot; &gt;
        &lt;activity
            android:name=&quot;HelloWorld&quot;
            android:label=&quot;@string/app_name&quot; &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</NativeHelpCommand4>
<HtmlEditCommand></HtmlEditCommand>
<CompileCommand5></CompileCommand5>
<RunCommand5></RunCommand5>
<GUIDesignerCommand5></GUIDesignerCommand5>
<ImportFiles5></ImportFiles5>
<ProgramStartupCode5>gosub @_PSTART
end
</ProgramStartupCode5>
<NativeHelpCommand5></NativeHelpCommand5>
<NoOptimizePin>0</NoOptimizePin>
<CompileCommand6>./compile_c</CompileCommand6>
<RunCommand6>./run_c</RunCommand6>
<GUIDesignerCommand6></GUIDesignerCommand6>
<ImportFiles6>#include &lt;setjmp.h&gt;
#include &lt;pthread.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;math.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;netdb.h&gt;

#include &lt;X11/Xlib.h&gt;
#include &lt;X11/Xutil.h&gt;
#include &lt;X11/Xlocale.h&gt; /* ロケール用ヘッダーファイル */
#include &lt;X11/xpm.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;signal.h&gt;
#include &lt;unistd.h&gt;
#include &lt;termios.h&gt;
#include &lt;errno.h&gt;
</ImportFiles6>
<ProgramStartupCode6>int ARGC; char** ARGV;
int main( int argc, char** argv ){
  ARGC=argc;
  ARGV=argv;
  _PSTART();
}
</ProgramStartupCode6>
<NativeHelpCommand6></NativeHelpCommand6>
<IDF_LocalVariable5>\</IDF_LocalVariable5>
<IDF_LocalVariable7>\</IDF_LocalVariable7>
<CompileCommand7></CompileCommand7>
<RunCommand7></RunCommand7>
<GUIDesignerCommand7></GUIDesignerCommand7>
<ImportFiles7></ImportFiles7>
<ProgramStartupCode7></ProgramStartupCode7>
<NativeHelpCommand7></NativeHelpCommand7>
</プロパティ>
<relation>
<ID>_R60</ID>
<pin1name>_A0(_Pstart)</pin1name>
<pin2name>_X19(_P16)</pin2name>
</relation>
<codeclip>
<ID>_C62</ID>
<x0>695</x0>
<y0>97</y0>
<width>230</width>
<height>35</height>
<codetext>// 長さが6文字の16進数文字列を返す
public String hex6( int i ){
  String s = Integer.toHexString(i);
  int l = s.length();
  if( l == 1 ) return &quot;00000&quot;+s;
  if( l == 2 ) return &quot;0000&quot;+s;
  if( l == 3 ) return &quot;000&quot;+s;
  if( l == 4 ) return &quot;00&quot;+s;
  if( l == 5 ) return &quot;0&quot;+s;
  return s;
}
</codetext>
</codeclip>
<relation>
<ID>_R63</ID>
<pin1name>_A0(_Pa_reg)</pin1name>
<pin2name>_X19(_P2)</pin2name>
</relation>
<relation>
<ID>_R64</ID>
<pin1name>_A0(_Py_reg)</pin1name>
<pin2name>_X19(_P1)</pin2name>
</relation>
<relation>
<ID>_R65</ID>
<pin1name>_A0(_Px_reg)</pin1name>
<pin2name>_X19(_P0)</pin2name>
</relation>
<relation>
<ID>_R66</ID>
<pin1name>_A0(_Pcf_reg)</pin1name>
<pin2name>_X19(_P6)</pin2name>
</relation>
<relation>
<ID>_R67</ID>
<pin1name>_A0(_Pzf_reg)</pin1name>
<pin2name>_X19(_P7)</pin2name>
</relation>
<relation>
<ID>_R68</ID>
<pin1name>_A0(_Ppc_reg)</pin1name>
<pin2name>_X19(_P17)</pin2name>
</relation>
<codeclip>
<ID>_C70</ID>
<x0>698</x0>
<y0>330</y0>
<width>301</width>
<height>38</height>
<codetext>//コマンドを実行して結果をコンソールに表示する
public void exec_command( String cmd ){

      Runtime runtime = Runtime.getRuntime();
      Process process;
      try {            //実行するコマンドを指定
        process = runtime.exec(cmd);
        new PrintThread(process.getInputStream()).start();
        new PrintThread(process.getErrorStream()).start();
        process.waitFor();
      } catch (Exception e) {}
    }


class PrintThread extends Thread{
  BufferedReader reader;
  PrintThread( InputStream s ){
    reader = new BufferedReader(new InputStreamReader(s));
  }
  
  public void run(){
    String line;
    try{
      while ((line = reader.readLine()) != null) message_area.append(line+&quot;\n&quot;);
      reader.close();
    } catch( IOException ie ){ }
  }
}
</codetext>
</codeclip>
<relation>
<ID>_R71</ID>
<pin1name>_A0(_Padrs_field)</pin1name>
<pin2name>_X19(_P62)</pin2name>
</relation>
<relation>
<ID>_R72</ID>
<pin1name>_A0(_Pdata_field)</pin1name>
<pin2name>_X19(_P63)</pin2name>
</relation>
<relation>
<ID>_R73</ID>
<pin1name>_A0(_PAadrs_field)</pin1name>
<pin2name>_X42(_P0)</pin2name>
</relation>
<xobject>
<ID>_X74</ID>
<x0>15</x0>
<y0>53</y0>
<width>97</width>
<height>105</height>
<ID_maker>14</ID_maker>
<objectname>command</objectname>
<description></description>
<operation>
<ID>_O0</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>223</y0>
<width>122</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>48</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//終了する 
System.exit(0);
</codetext>
</operation>
<pin>
<ID>_P4</ID>
<x0>32</x0>
<y0>49</y0>
<width>60</width>
<height>30</height>
<text>compile()</text>
<px>1</px>
<py>48</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>36</x0>
<y0>127</y0>
<width>60</width>
<height>30</height>
<text>edit()</text>
<px>2</px>
<py>81</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>41</x0>
<y0>232</y0>
<width>60</width>
<height>30</height>
<text>quit()</text>
<px>0</px>
<py>29</py>
</pin>
<relation>
<ID>_R9</ID>
<pin1name>_P6</pin1name>
<pin2name>_O0</pin2name>
</relation>
<operation>
<ID>_O10</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>161</x0>
<y0>46</y0>
<width>258</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>exec_command(&quot;./card8vm_compile&quot;);


try{

BufferedReader din = new BufferedReader( new FileReader( &quot;a.out&quot; ) );

while(true){
  String line;
  int adrs,data;
  if((line=din.readLine()) == null )  break;
  adrs = Integer.parseInt(line);
  if((line=din.readLine()) == null )  break;
  data = Integer.parseInt(line);
  mem[adrs] = data;
}

din.close();


} catch( IOException ie ){message_area.append(&quot;load error!\n&quot;);}
</codetext>
</operation>
<operation>
<ID>_O11</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>123</y0>
<width>233</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>exec_command(&quot;./card8vm_edit&quot;);
</codetext>
</operation>
<relation>
<ID>_R12</ID>
<pin1name>_P5</pin1name>
<pin2name>_O11</pin2name>
</relation>
<relation>
<ID>_R13</ID>
<pin1name>_P4</pin1name>
<pin2name>_O10</pin2name>
</relation>
</xobject>
<relation>
<ID>_R75</ID>
<pin1name>_A0(_PAcompile_button)</pin1name>
<pin2name>_X74(_P4)</pin2name>
</relation>
<relation>
<ID>_R78</ID>
<pin1name>_A0(_PAedit_button)</pin1name>
<pin2name>_X74(_P5)</pin2name>
</relation>
<relation>
<ID>_R79</ID>
<pin1name>_A0(_PGUIclosed)</pin1name>
<pin2name>_X74(_P6)</pin2name>
</relation>
<relation>
<ID>_R80</ID>
<pin1name>_A0(_Pname_field)</pin1name>
<pin2name>_X19(_P69)</pin2name>
</relation>
<aobject>
<ID>_A0</ID>
<x0>168</x0>
<y0>0</y0>
<width>280</width>
<objectname>GUI</objectname>
<description>GUIオブジェクト
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created(JFrame f)</text>
<px>0</px>
<py>54</py>
</pin>
<pin>
<ID>_PGUIclosed</ID>
<x0>310</x0>
<y0>0</y0>
<width>180</width>
<height>26</height>
<text>GUI_closed()</text>
<px>100</px>
<py>6</py>
</pin>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// GUIを作成する
XGUI x = new XGUI();

</codetext>
</operation>
<pin>
<ID>_PAcompile_button</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>compile_button_clicked()</text>
<px>0</px>
<py>72</py>
</pin>
<pin>
<ID>_Prun_button</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>run_button_created(JButton b)</text>
<px>0</px>
<py>90</py>
</pin>
<pin>
<ID>_PArun_button</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>run_button_clicked()</text>
<px>0</px>
<py>108</py>
</pin>
<pin>
<ID>_PAedit_button</ID>
<x0>0</x0>
<y0>194</y0>
<width>200</width>
<height>26</height>
<text>edit_button_clicked()</text>
<px>0</px>
<py>126</py>
</pin>
<pin>
<ID>_Pa_reg</ID>
<x0>0</x0>
<y0>222</y0>
<width>200</width>
<height>26</height>
<text>a_reg_created(JTextField t)</text>
<px>0</px>
<py>144</py>
</pin>
<pin>
<ID>_Py_reg</ID>
<x0>0</x0>
<y0>250</y0>
<width>200</width>
<height>26</height>
<text>y_reg_created(JTextField t)</text>
<px>0</px>
<py>162</py>
</pin>
<pin>
<ID>_Px_reg</ID>
<x0>0</x0>
<y0>278</y0>
<width>200</width>
<height>26</height>
<text>x_reg_created(JTextField t)</text>
<px>0</px>
<py>180</py>
</pin>
<pin>
<ID>_Pcf_reg</ID>
<x0>0</x0>
<y0>306</y0>
<width>200</width>
<height>26</height>
<text>cf_reg_created(JLabel l)</text>
<px>0</px>
<py>198</py>
</pin>
<pin>
<ID>_Pzf_reg</ID>
<x0>0</x0>
<y0>334</y0>
<width>200</width>
<height>26</height>
<text>zf_reg_created(JLabel l)</text>
<px>0</px>
<py>216</py>
</pin>
<pin>
<ID>_Pmessage_area</ID>
<x0>0</x0>
<y0>362</y0>
<width>200</width>
<height>26</height>
<text>message_area_created(JTextArea t)</text>
<px>0</px>
<py>234</py>
</pin>
<pin>
<ID>_PAadd_button</ID>
<x0>0</x0>
<y0>390</y0>
<width>200</width>
<height>26</height>
<text>add_button_clicked()</text>
<px>0</px>
<py>252</py>
</pin>
<pin>
<ID>_PAremove_button</ID>
<x0>0</x0>
<y0>418</y0>
<width>200</width>
<height>26</height>
<text>remove_button_clicked()</text>
<px>0</px>
<py>270</py>
</pin>
<pin>
<ID>_PAsingle_button</ID>
<x0>0</x0>
<y0>446</y0>
<width>200</width>
<height>26</height>
<text>single_button_clicked()</text>
<px>0</px>
<py>288</py>
</pin>
<pin>
<ID>_Pclock_field</ID>
<x0>0</x0>
<y0>474</y0>
<width>200</width>
<height>26</height>
<text>clock_field_created(JTextField t)</text>
<px>0</px>
<py>306</py>
</pin>
<pin>
<ID>_Pno_field</ID>
<x0>0</x0>
<y0>502</y0>
<width>200</width>
<height>26</height>
<text>no_field_created(JTextField t)</text>
<px>0</px>
<py>324</py>
</pin>
<pin>
<ID>_PAno_field</ID>
<x0>0</x0>
<y0>530</y0>
<width>200</width>
<height>26</height>
<text>no_field_input(String s)</text>
<px>0</px>
<py>342</py>
</pin>
<pin>
<ID>_Pname_field</ID>
<x0>0</x0>
<y0>558</y0>
<width>200</width>
<height>26</height>
<text>name_field_created(JTextField t)</text>
<px>0</px>
<py>360</py>
</pin>
<pin>
<ID>_Pstart_field</ID>
<x0>0</x0>
<y0>586</y0>
<width>200</width>
<height>26</height>
<text>start_field_created(JTextField t)</text>
<px>0</px>
<py>378</py>
</pin>
<pin>
<ID>_Pend_field</ID>
<x0>0</x0>
<y0>614</y0>
<width>200</width>
<height>26</height>
<text>end_field_created(JTextField t)</text>
<px>0</px>
<py>396</py>
</pin>
<pin>
<ID>_Pinterval_field</ID>
<x0>0</x0>
<y0>642</y0>
<width>200</width>
<height>26</height>
<text>interval_field_created(JTextField t)</text>
<px>0</px>
<py>414</py>
</pin>
<pin>
<ID>_Ppc_reg</ID>
<x0>0</x0>
<y0>670</y0>
<width>200</width>
<height>26</height>
<text>pc_reg_created(JTextField t)</text>
<px>0</px>
<py>432</py>
</pin>
<pin>
<ID>_Pdata_field</ID>
<x0>0</x0>
<y0>698</y0>
<width>200</width>
<height>26</height>
<text>data_field_created(JTextField t)</text>
<px>0</px>
<py>450</py>
</pin>
<pin>
<ID>_Padrs_field</ID>
<x0>0</x0>
<y0>726</y0>
<width>200</width>
<height>26</height>
<text>adrs_field_created(JTextField t)</text>
<px>0</px>
<py>468</py>
</pin>
<pin>
<ID>_PAadrs_field</ID>
<x0>0</x0>
<y0>754</y0>
<width>200</width>
<height>26</height>
<text>adrs_field_input(String s)</text>
<px>0</px>
<py>486</py>
</pin>
<pin>
<ID>_PAinc_addr</ID>
<x0>0</x0>
<y0>782</y0>
<width>200</width>
<height>26</height>
<text>inc_addr_clicked()</text>
<px>0</px>
<py>504</py>
</pin>
<pin>
<ID>_PAdec_addr</ID>
<x0>0</x0>
<y0>810</y0>
<width>200</width>
<height>26</height>
<text>dec_addr_clicked()</text>
<px>0</px>
<py>522</py>
</pin>
<pin>
<ID>_PAmem_set</ID>
<x0>0</x0>
<y0>838</y0>
<width>200</width>
<height>26</height>
<text>mem_set_clicked()</text>
<px>0</px>
<py>540</py>
</pin>
<codeclip>
<ID>_CXSTART</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>26</height>
<codetext> class XGUI extends JFrame implements WindowListener{
 JPanel cnt;
compile_button Icompile_button;
 class compile_button extends JButton implements ActionListener{
  compile_button(){
 setOpaque( true );
 setName(  &quot;compile_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Compile&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ compile_button_clicked(); }
}
run_button Irun_button;
 class run_button extends JButton implements ActionListener{
  run_button(){
 setOpaque( true );
 setName(  &quot;run_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;run&quot; );
 addActionListener( this );
 run_button_created( this );
}
 public void actionPerformed( ActionEvent e ){ run_button_clicked(); }
}
LABEL2 ILABEL2;
 class LABEL2 extends JLabel{
  LABEL2(){
 setOpaque( true );
 setName(  &quot;LABEL2&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;A:&quot; );
}
}
LABEL3 ILABEL3;
 class LABEL3 extends JLabel{
  LABEL3(){
 setOpaque( true );
 setName(  &quot;LABEL3&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Y:&quot; );
}
}
LABEL4 ILABEL4;
 class LABEL4 extends JLabel{
  LABEL4(){
 setOpaque( true );
 setName(  &quot;LABEL4&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;X:&quot; );
}
}
edit_button Iedit_button;
 class edit_button extends JButton implements ActionListener{
  edit_button(){
 setOpaque( true );
 setName(  &quot;edit_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;edit&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ edit_button_clicked(); }
}
a_reg Ia_reg;
 class a_reg extends JTextField{
  a_reg(){
 setOpaque( true );
 setName(  &quot;a_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;00&quot; );
 a_reg_created( this );
}
}
y_reg Iy_reg;
 class y_reg extends JTextField{
  y_reg(){
 setOpaque( true );
 setName(  &quot;y_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;000000&quot; );
 y_reg_created( this );
}
}
x_reg Ix_reg;
 class x_reg extends JTextField{
  x_reg(){
 setOpaque( true );
 setName(  &quot;x_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;000000&quot; );
 x_reg_created( this );
}
}
cf_reg Icf_reg;
 class cf_reg extends JLabel{
  cf_reg(){
 setOpaque( true );
 setName(  &quot;cf_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;CF&quot; );
 cf_reg_created( this );
}
}
zf_reg Izf_reg;
 class zf_reg extends JLabel{
  zf_reg(){
 setOpaque( true );
 setName(  &quot;zf_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;ZF&quot; );
 zf_reg_created( this );
}
}
message_area Imessage_area;
 class message_area extends JTextArea{
 JScrollPane scrl;
  message_area(){
 setOpaque( true );
 setName(  &quot;message_area&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;&quot; );
 scrl = new JScrollPane( this );
 message_area_created( this );
}
}
add_button Iadd_button;
 class add_button extends JButton implements ActionListener{
  add_button(){
 setOpaque( true );
 setName(  &quot;add_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;add&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ add_button_clicked(); }
}
remove_button Iremove_button;
 class remove_button extends JButton implements ActionListener{
  remove_button(){
 setOpaque( true );
 setName(  &quot;remove_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;del&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ remove_button_clicked(); }
}
single_button Isingle_button;
 class single_button extends JButton implements ActionListener{
  single_button(){
 setOpaque( true );
 setName(  &quot;single_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;1step&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ single_button_clicked(); }
}
LABEL24 ILABEL24;
 class LABEL24 extends JLabel{
  LABEL24(){
 setOpaque( true );
 setName(  &quot;LABEL24&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 2 );
 setVerticalAlignment( 0 );
 setText( &quot;CYCLE:&quot; );
}
}
clock_field Iclock_field;
 class clock_field extends JTextField{
  clock_field(){
 setOpaque( true );
 setName(  &quot;clock_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 clock_field_created( this );
}
}
LABEL26 ILABEL26;
 class LABEL26 extends JLabel{
  LABEL26(){
 setOpaque( true );
 setName(  &quot;LABEL26&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;No.&quot; );
}
}
LABEL27 ILABEL27;
 class LABEL27 extends JLabel{
  LABEL27(){
 setOpaque( true );
 setName(  &quot;LABEL27&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Name&quot; );
}
}
LABEL28 ILABEL28;
 class LABEL28 extends JLabel{
  LABEL28(){
 setOpaque( true );
 setName(  &quot;LABEL28&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Start&quot; );
}
}
LABEL29 ILABEL29;
 class LABEL29 extends JLabel{
  LABEL29(){
 setOpaque( true );
 setName(  &quot;LABEL29&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;End&quot; );
}
}
no_field Ino_field;
 class no_field extends JTextField implements ActionListener{
  no_field(){
 setOpaque( true );
 setName(  &quot;no_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 addActionListener( this );
 no_field_created( this );
}
 public void actionPerformed( ActionEvent e ){ no_field_input( getText() ); }
}
name_field Iname_field;
 class name_field extends JTextField{
  name_field(){
 setOpaque( true );
 setName(  &quot;name_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;&quot; );
 name_field_created( this );
}
}
start_field Istart_field;
 class start_field extends JTextField{
  start_field(){
 setOpaque( true );
 setName(  &quot;start_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 start_field_created( this );
}
}
end_field Iend_field;
 class end_field extends JTextField{
  end_field(){
 setOpaque( true );
 setName(  &quot;end_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 end_field_created( this );
}
}
LABEL33 ILABEL33;
 class LABEL33 extends JLabel{
  LABEL33(){
 setOpaque( true );
 setName(  &quot;LABEL33&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;interval time&quot; );
}
}
LABEL34 ILABEL34;
 class LABEL34 extends JLabel{
  LABEL34(){
 setOpaque( true );
 setName(  &quot;LABEL34&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;ms&quot; );
}
}
interval_field Iinterval_field;
 class interval_field extends JTextField{
  interval_field(){
 setOpaque( true );
 setName(  &quot;interval_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;1000&quot; );
 interval_field_created( this );
}
}
LABEL36 ILABEL36;
 class LABEL36 extends JLabel{
  LABEL36(){
 setOpaque( true );
 setName(  &quot;LABEL36&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;PC:&quot; );
}
}
pc_reg Ipc_reg;
 class pc_reg extends JTextField{
  pc_reg(){
 setOpaque( true );
 setName(  &quot;pc_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;000000&quot; );
 pc_reg_created( this );
}
}
data_field Idata_field;
 class data_field extends JTextField{
  data_field(){
 setOpaque( true );
 setName(  &quot;data_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;00&quot; );
 data_field_created( this );
}
}
adrs_field Iadrs_field;
 class adrs_field extends JTextField implements ActionListener{
  adrs_field(){
 setOpaque( true );
 setName(  &quot;adrs_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;000000&quot; );
 addActionListener( this );
 adrs_field_created( this );
}
 public void actionPerformed( ActionEvent e ){ adrs_field_input( getText() ); }
}
inc_addr Iinc_addr;
 class inc_addr extends JButton implements ActionListener{
  inc_addr(){
 setOpaque( true );
 setName(  &quot;inc_addr&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;+&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ inc_addr_clicked(); }
}
dec_addr Idec_addr;
 class dec_addr extends JButton implements ActionListener{
  dec_addr(){
 setOpaque( true );
 setName(  &quot;dec_addr&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;-&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ dec_addr_clicked(); }
}
mem_set Imem_set;
 class mem_set extends JButton implements ActionListener{
  mem_set(){
 setOpaque( true );
 setName(  &quot;mem_set&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;WRT&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ mem_set_clicked(); }
}
 XGUI(){
 setTitle(&quot;CARD8VMシミュレータ&quot;);
 cnt = new JPanel( new BorderLayout() );
 cnt.setPreferredSize(  new  Dimension( 410, 583 ) );
 ((Component)cnt).setBackground( new Color( 238, 238, 238 ) );
 Icompile_button = new compile_button();
 cnt.add( Icompile_button, 0 );
 cnt.getLayout().removeLayoutComponent( Icompile_button );
 Icompile_button.setBounds( 3, 3, 106, 27 );
 Irun_button = new run_button();
 cnt.add( Irun_button, 0 );
 cnt.getLayout().removeLayoutComponent( Irun_button );
 Irun_button.setBounds( 113, 3, 69, 28 );
 ILABEL2 = new LABEL2();
 cnt.add( ILABEL2, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL2 );
 ILABEL2.setBounds( 264, 35, 32, 24 );
 ILABEL3 = new LABEL3();
 cnt.add( ILABEL3, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL3 );
 ILABEL3.setBounds( 214, 35, 46, 24 );
 ILABEL4 = new LABEL4();
 cnt.add( ILABEL4, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL4 );
 ILABEL4.setBounds( 167, 35, 44, 24 );
 Iedit_button = new edit_button();
 cnt.add( Iedit_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iedit_button );
 Iedit_button.setBounds( 186, 2, 64, 29 );
 Ia_reg = new a_reg();
 cnt.add( Ia_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Ia_reg );
 Ia_reg.setBounds( 263, 64, 35, 25 );
 Iy_reg = new y_reg();
 cnt.add( Iy_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Iy_reg );
 Iy_reg.setBounds( 215, 64, 46, 23 );
 Ix_reg = new x_reg();
 cnt.add( Ix_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Ix_reg );
 Ix_reg.setBounds( 167, 63, 47, 24 );
 Icf_reg = new cf_reg();
 cnt.add( Icf_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Icf_reg );
 Icf_reg.setBounds( 299, 35, 49, 25 );
 Izf_reg = new zf_reg();
 cnt.add( Izf_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Izf_reg );
 Izf_reg.setBounds( 351, 36, 54, 24 );
 Imessage_area = new message_area();
 cnt.add( Imessage_area.scrl, 0 );
 cnt.getLayout().removeLayoutComponent( Imessage_area.scrl );
 (  Imessage_area.scrl ).setBounds( 7, 141, 398, 434 );
 Iadd_button = new add_button();
 cnt.add( Iadd_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iadd_button );
 Iadd_button.setBounds( 299, 64, 50, 26 );
 Iremove_button = new remove_button();
 cnt.add( Iremove_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iremove_button );
 Iremove_button.setBounds( 353, 64, 51, 27 );
 Isingle_button = new single_button();
 cnt.add( Isingle_button, 0 );
 cnt.getLayout().removeLayoutComponent( Isingle_button );
 Isingle_button.setBounds( 63, 80, 47, 53 );
 ILABEL24 = new LABEL24();
 cnt.add( ILABEL24, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL24 );
 ILABEL24.setBounds( 1, 80, 59, 22 );
 Iclock_field = new clock_field();
 cnt.add( Iclock_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iclock_field );
 Iclock_field.setBounds( 3, 105, 56, 30 );
 ILABEL26 = new LABEL26();
 cnt.add( ILABEL26, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL26 );
 ILABEL26.setBounds( 224, 91, 32, 18 );
 ILABEL27 = new LABEL27();
 cnt.add( ILABEL27, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL27 );
 ILABEL27.setBounds( 260, 91, 50, 19 );
 ILABEL28 = new LABEL28();
 cnt.add( ILABEL28, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL28 );
 ILABEL28.setBounds( 314, 94, 45, 16 );
 ILABEL29 = new LABEL29();
 cnt.add( ILABEL29, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL29 );
 ILABEL29.setBounds( 362, 94, 39, 16 );
 Ino_field = new no_field();
 cnt.add( Ino_field, 0 );
 cnt.getLayout().removeLayoutComponent( Ino_field );
 Ino_field.setBounds( 225, 112, 31, 22 );
 Iname_field = new name_field();
 cnt.add( Iname_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iname_field );
 Iname_field.setBounds( 258, 113, 51, 21 );
 Istart_field = new start_field();
 cnt.add( Istart_field, 0 );
 cnt.getLayout().removeLayoutComponent( Istart_field );
 Istart_field.setBounds( 311, 113, 47, 22 );
 Iend_field = new end_field();
 cnt.add( Iend_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iend_field );
 Iend_field.setBounds( 360, 113, 46, 22 );
 ILABEL33 = new LABEL33();
 cnt.add( ILABEL33, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL33 );
 ILABEL33.setBounds( 115, 90, 105, 15 );
 ILABEL34 = new LABEL34();
 cnt.add( ILABEL34, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL34 );
 ILABEL34.setBounds( 194, 109, 25, 23 );
 Iinterval_field = new interval_field();
 cnt.add( Iinterval_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iinterval_field );
 Iinterval_field.setBounds( 116, 109, 75, 25 );
 ILABEL36 = new LABEL36();
 cnt.add( ILABEL36, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL36 );
 ILABEL36.setBounds( 114, 35, 50, 25 );
 Ipc_reg = new pc_reg();
 cnt.add( Ipc_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Ipc_reg );
 Ipc_reg.setBounds( 114, 63, 52, 24 );
 Idata_field = new data_field();
 cnt.add( Idata_field, 0 );
 cnt.getLayout().removeLayoutComponent( Idata_field );
 Idata_field.setBounds( 74, 56, 35, 22 );
 Iadrs_field = new adrs_field();
 cnt.add( Iadrs_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iadrs_field );
 Iadrs_field.setBounds( 1, 56, 70, 22 );
 Iinc_addr = new inc_addr();
 cnt.add( Iinc_addr, 0 );
 cnt.getLayout().removeLayoutComponent( Iinc_addr );
 Iinc_addr.setBounds( 3, 32, 24, 21 );
 Idec_addr = new dec_addr();
 cnt.add( Idec_addr, 0 );
 cnt.getLayout().removeLayoutComponent( Idec_addr );
 Idec_addr.setBounds( 29, 32, 26, 21 );
 Imem_set = new mem_set();
 cnt.add( Imem_set, 0 );
 cnt.getLayout().removeLayoutComponent( Imem_set );
 Imem_set.setBounds( 57, 32, 52, 22 );
 setContentPane( cnt );
 pack();
 addWindowListener( this );
 setVisible( true );
 GUI_created( this );
}
 public void windowActivated( WindowEvent e ){}
 public void windowClosed( WindowEvent e ){}
 public void windowClosing( WindowEvent e ){ GUI_closed(); }
 public void windowDeactivated( WindowEvent e ){}
 public void windowDeiconified( WindowEvent e ){}
 public void windowIconified( WindowEvent e ){}
 public void windowOpened( WindowEvent e ){}
}
</codetext>
</codeclip>
<ID_maker>47</ID_maker>
<height>562</height>
<レイアウト>CARD8VMシミュレータ
410
583
238
238
238
xxscale=1
BUTTON;compile_button;Compile;3;3;106;27;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;run_button;run;113;3;69;28;51;51;51;192;192;192;Dialog;12;null;0;0;1;1;1;JButton;
LABEL;LABEL2;A:;264;35;32;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL3;Y:;214;35;46;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL4;X:;167;35;44;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
BUTTON;edit_button;edit;186;2;64;29;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
TEXTFIELD;a_reg;00;263;64;35;25;51;51;51;255;255;255;Dialog;9;1;1;0;JTextField;
TEXTFIELD;y_reg;000000;215;64;46;23;51;51;51;255;255;255;Dialog;9;1;1;0;JTextField;
TEXTFIELD;x_reg;000000;167;63;47;24;51;51;51;255;255;255;Dialog;9;1;1;0;JTextField;
LABEL;cf_reg;CF;299;35;49;25;51;51;51;192;192;192;Dialog;10;null;0;0;1;1;0;JLabel;
LABEL;zf_reg;ZF;351;36;54;24;51;51;51;192;192;192;Dialog;10;null;0;0;1;1;0;JLabel;
TEXTAREA;message_area;null;7;141;398;434;51;51;51;255;255;255;Dialog;12;1;1;1;JTextArea;
BUTTON;add_button;add;299;64;50;26;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;remove_button;del;353;64;51;27;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;single_button;1step;63;80;47;53;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
LABEL;LABEL24;CYCLE:;1;80;59;22;51;51;51;192;192;192;Dialog;12;null;2;0;1;0;0;JLabel;
TEXTFIELD;clock_field;0;3;105;56;30;51;51;51;255;255;255;Dialog;12;1;1;0;JTextField;
LABEL;LABEL26;No.;224;91;32;18;51;51;51;192;192;192;Dialog;10;null;0;0;1;0;0;JLabel;
LABEL;LABEL27;Name;260;91;50;19;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL28;Start;314;94;45;16;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL29;End;362;94;39;16;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
TEXTFIELD;no_field;0;225;112;31;22;51;51;51;255;255;255;Dialog;10;1;1;1;JTextField;
TEXTFIELD;name_field;null;258;113;51;21;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;start_field;0;311;113;47;22;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;end_field;0;360;113;46;22;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
LABEL;LABEL33;interval time;115;90;105;15;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL34;ms;194;109;25;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
TEXTFIELD;interval_field;1000;116;109;75;25;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
LABEL;LABEL36;PC:;114;35;50;25;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
TEXTFIELD;pc_reg;000000;114;63;52;24;51;51;51;255;255;255;Dialog;9;1;1;0;JTextField;
TEXTFIELD;data_field;00;74;56;35;22;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;adrs_field;000000;1;56;70;22;51;51;51;255;255;255;Dialog;10;1;1;1;JTextField;
BUTTON;inc_addr;+;3;32;24;21;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;dec_addr;-;29;32;26;21;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;mem_set;WRT;57;32;52;22;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
</レイアウト>
</aobject>
</xobject>
